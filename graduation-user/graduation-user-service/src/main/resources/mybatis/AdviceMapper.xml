<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.graduation.education.user.service.dao.impl.mapper.AdviceMapper">
  <resultMap id="BaseResultMap" type="com.graduation.education.user.service.dao.impl.mapper.entity.Advice">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="teacher_id" jdbcType="BIGINT" property="teacherId" />
    <result column="teacherName" jdbcType="VARCHAR" property="teacherName" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="rank" jdbcType="VARCHAR" property="rank" />
    <result column="begin_time" jdbcType="TIMESTAMP" property="beginTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="look_times" jdbcType="BIGINT" property="lookTimes" />
    <result column="submission" jdbcType="VARCHAR" property="submission" />
    <result column="class_no" jdbcType="VARCHAR" property="classNo" />
    <result column="submission_addr" jdbcType="VARCHAR" property="submissionAddr" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_tine" jdbcType="TIMESTAMP" property="modifyTine" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.graduation.education.user.service.dao.impl.mapper.entity.Advice">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, teacher_id, teacherName, title, `rank`, begin_time, end_time, look_times, 
    submission, class_no, submission_addr, create_time, modify_tine
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.graduation.education.user.service.dao.impl.mapper.entity.AdviceExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from advice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.graduation.education.user.service.dao.impl.mapper.entity.AdviceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from advice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from advice
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from advice
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.graduation.education.user.service.dao.impl.mapper.entity.AdviceExample">
    delete from advice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.graduation.education.user.service.dao.impl.mapper.entity.Advice">
    insert into advice (id, code, teacher_id, 
      teacherName, title, `rank`, 
      begin_time, end_time, look_times, 
      submission, class_no, submission_addr, 
      create_time, modify_tine, content
      )
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{teacherId,jdbcType=BIGINT}, 
      #{teacherName,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{rank,jdbcType=VARCHAR}, 
      #{beginTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{lookTimes,jdbcType=BIGINT}, 
      #{submission,jdbcType=VARCHAR}, #{classNo,jdbcType=VARCHAR}, #{submissionAddr,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTine,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.graduation.education.user.service.dao.impl.mapper.entity.Advice">
    insert into advice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="teacherName != null">
        teacherName,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="rank != null">
        `rank`,
      </if>
      <if test="beginTime != null">
        begin_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="lookTimes != null">
        look_times,
      </if>
      <if test="submission != null">
        submission,
      </if>
      <if test="classNo != null">
        class_no,
      </if>
      <if test="submissionAddr != null">
        submission_addr,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTine != null">
        modify_tine,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=BIGINT},
      </if>
      <if test="teacherName != null">
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="rank != null">
        #{rank,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lookTimes != null">
        #{lookTimes,jdbcType=BIGINT},
      </if>
      <if test="submission != null">
        #{submission,jdbcType=VARCHAR},
      </if>
      <if test="classNo != null">
        #{classNo,jdbcType=VARCHAR},
      </if>
      <if test="submissionAddr != null">
        #{submissionAddr,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTine != null">
        #{modifyTine,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.graduation.education.user.service.dao.impl.mapper.entity.AdviceExample" resultType="java.lang.Long">
    select count(*) from advice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update advice
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=BIGINT},
      </if>
      <if test="record.teacherName != null">
        teacherName = #{record.teacherName,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.rank != null">
        `rank` = #{record.rank,jdbcType=VARCHAR},
      </if>
      <if test="record.beginTime != null">
        begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lookTimes != null">
        look_times = #{record.lookTimes,jdbcType=BIGINT},
      </if>
      <if test="record.submission != null">
        submission = #{record.submission,jdbcType=VARCHAR},
      </if>
      <if test="record.classNo != null">
        class_no = #{record.classNo,jdbcType=VARCHAR},
      </if>
      <if test="record.submissionAddr != null">
        submission_addr = #{record.submissionAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTine != null">
        modify_tine = #{record.modifyTine,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update advice
    set id = #{record.id,jdbcType=BIGINT},
      code = #{record.code,jdbcType=VARCHAR},
      teacher_id = #{record.teacherId,jdbcType=BIGINT},
      teacherName = #{record.teacherName,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      `rank` = #{record.rank,jdbcType=VARCHAR},
      begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      look_times = #{record.lookTimes,jdbcType=BIGINT},
      submission = #{record.submission,jdbcType=VARCHAR},
      class_no = #{record.classNo,jdbcType=VARCHAR},
      submission_addr = #{record.submissionAddr,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_tine = #{record.modifyTine,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update advice
    set id = #{record.id,jdbcType=BIGINT},
      code = #{record.code,jdbcType=VARCHAR},
      teacher_id = #{record.teacherId,jdbcType=BIGINT},
      teacherName = #{record.teacherName,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      `rank` = #{record.rank,jdbcType=VARCHAR},
      begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      look_times = #{record.lookTimes,jdbcType=BIGINT},
      submission = #{record.submission,jdbcType=VARCHAR},
      class_no = #{record.classNo,jdbcType=VARCHAR},
      submission_addr = #{record.submissionAddr,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_tine = #{record.modifyTine,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduation.education.user.service.dao.impl.mapper.entity.Advice">
    update advice
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=BIGINT},
      </if>
      <if test="teacherName != null">
        teacherName = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="rank != null">
        `rank` = #{rank,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        begin_time = #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lookTimes != null">
        look_times = #{lookTimes,jdbcType=BIGINT},
      </if>
      <if test="submission != null">
        submission = #{submission,jdbcType=VARCHAR},
      </if>
      <if test="classNo != null">
        class_no = #{classNo,jdbcType=VARCHAR},
      </if>
      <if test="submissionAddr != null">
        submission_addr = #{submissionAddr,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTine != null">
        modify_tine = #{modifyTine,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.graduation.education.user.service.dao.impl.mapper.entity.Advice">
    update advice
    set code = #{code,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=BIGINT},
      teacherName = #{teacherName,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      `rank` = #{rank,jdbcType=VARCHAR},
      begin_time = #{beginTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      look_times = #{lookTimes,jdbcType=BIGINT},
      submission = #{submission,jdbcType=VARCHAR},
      class_no = #{classNo,jdbcType=VARCHAR},
      submission_addr = #{submissionAddr,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_tine = #{modifyTine,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduation.education.user.service.dao.impl.mapper.entity.Advice">
    update advice
    set code = #{code,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=BIGINT},
      teacherName = #{teacherName,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      `rank` = #{rank,jdbcType=VARCHAR},
      begin_time = #{beginTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      look_times = #{lookTimes,jdbcType=BIGINT},
      submission = #{submission,jdbcType=VARCHAR},
      class_no = #{classNo,jdbcType=VARCHAR},
      submission_addr = #{submissionAddr,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_tine = #{modifyTine,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>