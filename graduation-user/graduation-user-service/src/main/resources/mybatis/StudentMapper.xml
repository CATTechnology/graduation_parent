<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.graduation.education.user.service.dao.impl.mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="com.graduation.education.user.service.dao.impl.mapper.entity.Student">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="class_no" jdbcType="VARCHAR" property="classNo" />
    <result column="professional" jdbcType="VARCHAR" property="professional" />
    <result column="college" jdbcType="VARCHAR" property="college" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="wetchat" jdbcType="VARCHAR" property="wetchat" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="passwd" jdbcType="VARCHAR" property="passwd" />
    <result column="student_no" jdbcType="VARCHAR" property="studentNo" />
    <result column="date_of_birth" jdbcType="TIMESTAMP" property="dateOfBirth" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="mobile" jdbcType="CHAR" property="mobile" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="phone_brand" jdbcType="VARCHAR" property="phoneBrand" />
    <result column="phone_model" jdbcType="VARCHAR" property="phoneModel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`, class_no, professional, college, real_name, wetchat, email, qq, passwd, 
    student_no, date_of_birth, age, mobile, telephone, phone_brand, phone_model, create_time, 
    modify_time
  </sql>
  <select id="selectByExample" parameterType="com.graduation.education.user.service.dao.impl.mapper.entity.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from student
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.graduation.education.user.service.dao.impl.mapper.entity.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.graduation.education.user.service.dao.impl.mapper.entity.Student">
    insert into student (id, `name`, class_no, 
      professional, college, real_name, 
      wetchat, email, qq, 
      passwd, student_no, date_of_birth, 
      age, mobile, telephone, 
      phone_brand, phone_model, create_time, 
      modify_time)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{classNo,jdbcType=VARCHAR}, 
      #{professional,jdbcType=VARCHAR}, #{college,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{wetchat,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{passwd,jdbcType=VARCHAR}, #{studentNo,jdbcType=VARCHAR}, #{dateOfBirth,jdbcType=TIMESTAMP}, 
      #{age,jdbcType=INTEGER}, #{mobile,jdbcType=CHAR}, #{telephone,jdbcType=VARCHAR}, 
      #{phoneBrand,jdbcType=VARCHAR}, #{phoneModel,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.graduation.education.user.service.dao.impl.mapper.entity.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="classNo != null">
        class_no,
      </if>
      <if test="professional != null">
        professional,
      </if>
      <if test="college != null">
        college,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="wetchat != null">
        wetchat,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="passwd != null">
        passwd,
      </if>
      <if test="studentNo != null">
        student_no,
      </if>
      <if test="dateOfBirth != null">
        date_of_birth,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="phoneBrand != null">
        phone_brand,
      </if>
      <if test="phoneModel != null">
        phone_model,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="classNo != null">
        #{classNo,jdbcType=VARCHAR},
      </if>
      <if test="professional != null">
        #{professional,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        #{college,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="wetchat != null">
        #{wetchat,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null">
        #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="studentNo != null">
        #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="dateOfBirth != null">
        #{dateOfBirth,jdbcType=TIMESTAMP},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=CHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phoneBrand != null">
        #{phoneBrand,jdbcType=VARCHAR},
      </if>
      <if test="phoneModel != null">
        #{phoneModel,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.graduation.education.user.service.dao.impl.mapper.entity.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.classNo != null">
        class_no = #{record.classNo,jdbcType=VARCHAR},
      </if>
      <if test="record.professional != null">
        professional = #{record.professional,jdbcType=VARCHAR},
      </if>
      <if test="record.college != null">
        college = #{record.college,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.wetchat != null">
        wetchat = #{record.wetchat,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.passwd != null">
        passwd = #{record.passwd,jdbcType=VARCHAR},
      </if>
      <if test="record.studentNo != null">
        student_no = #{record.studentNo,jdbcType=VARCHAR},
      </if>
      <if test="record.dateOfBirth != null">
        date_of_birth = #{record.dateOfBirth,jdbcType=TIMESTAMP},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=CHAR},
      </if>
      <if test="record.telephone != null">
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneBrand != null">
        phone_brand = #{record.phoneBrand,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneModel != null">
        phone_model = #{record.phoneModel,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set id = #{record.id,jdbcType=BIGINT},
      `name` = #{record.name,jdbcType=VARCHAR},
      class_no = #{record.classNo,jdbcType=VARCHAR},
      professional = #{record.professional,jdbcType=VARCHAR},
      college = #{record.college,jdbcType=VARCHAR},
      real_name = #{record.realName,jdbcType=VARCHAR},
      wetchat = #{record.wetchat,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      passwd = #{record.passwd,jdbcType=VARCHAR},
      student_no = #{record.studentNo,jdbcType=VARCHAR},
      date_of_birth = #{record.dateOfBirth,jdbcType=TIMESTAMP},
      age = #{record.age,jdbcType=INTEGER},
      mobile = #{record.mobile,jdbcType=CHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      phone_brand = #{record.phoneBrand,jdbcType=VARCHAR},
      phone_model = #{record.phoneModel,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduation.education.user.service.dao.impl.mapper.entity.Student">
    update student
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="classNo != null">
        class_no = #{classNo,jdbcType=VARCHAR},
      </if>
      <if test="professional != null">
        professional = #{professional,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        college = #{college,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="wetchat != null">
        wetchat = #{wetchat,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null">
        passwd = #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="studentNo != null">
        student_no = #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="dateOfBirth != null">
        date_of_birth = #{dateOfBirth,jdbcType=TIMESTAMP},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=CHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phoneBrand != null">
        phone_brand = #{phoneBrand,jdbcType=VARCHAR},
      </if>
      <if test="phoneModel != null">
        phone_model = #{phoneModel,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduation.education.user.service.dao.impl.mapper.entity.Student">
    update student
    set `name` = #{name,jdbcType=VARCHAR},
      class_no = #{classNo,jdbcType=VARCHAR},
      professional = #{professional,jdbcType=VARCHAR},
      college = #{college,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      wetchat = #{wetchat,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      passwd = #{passwd,jdbcType=VARCHAR},
      student_no = #{studentNo,jdbcType=VARCHAR},
      date_of_birth = #{dateOfBirth,jdbcType=TIMESTAMP},
      age = #{age,jdbcType=INTEGER},
      mobile = #{mobile,jdbcType=CHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      phone_brand = #{phoneBrand,jdbcType=VARCHAR},
      phone_model = #{phoneModel,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>