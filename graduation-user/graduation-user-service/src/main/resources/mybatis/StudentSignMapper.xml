<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.graduation.education.user.service.dao.impl.mapper.StudentSignMapper">
  <resultMap id="BaseResultMap" type="com.graduation.education.user.service.dao.impl.mapper.entity.StudentSign">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="student_no" jdbcType="VARCHAR" property="studentNo" />
    <result column="student_name" jdbcType="VARCHAR" property="studentName" />
    <result column="class_no" jdbcType="VARCHAR" property="classNo" />
    <result column="phone_brand" jdbcType="VARCHAR" property="phoneBrand" />
    <result column="phone_model" jdbcType="VARCHAR" property="phoneModel" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="point" jdbcType="VARCHAR" property="point" />
    <result column="coordType" jdbcType="VARCHAR" property="coordtype" />
    <result column="change_phone" jdbcType="TINYINT" property="changePhone" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, student_no, student_name, class_no, phone_brand, phone_model, address, point, 
    coordType, change_phone, create_time, modify_time
  </sql>
  <select id="selectByExample" parameterType="com.graduation.education.user.service.dao.impl.mapper.entity.StudentSignExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student_sign
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student_sign
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from student_sign
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.graduation.education.user.service.dao.impl.mapper.entity.StudentSignExample">
    delete from student_sign
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.graduation.education.user.service.dao.impl.mapper.entity.StudentSign">
    insert into student_sign (id, student_no, student_name, 
      class_no, phone_brand, phone_model, 
      address, point, coordType, 
      change_phone, create_time, modify_time
      )
    values (#{id,jdbcType=BIGINT}, #{studentNo,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR}, 
      #{classNo,jdbcType=VARCHAR}, #{phoneBrand,jdbcType=VARCHAR}, #{phoneModel,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{point,jdbcType=VARCHAR}, #{coordtype,jdbcType=VARCHAR}, 
      #{changePhone,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.graduation.education.user.service.dao.impl.mapper.entity.StudentSign">
    insert into student_sign
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentNo != null">
        student_no,
      </if>
      <if test="studentName != null">
        student_name,
      </if>
      <if test="classNo != null">
        class_no,
      </if>
      <if test="phoneBrand != null">
        phone_brand,
      </if>
      <if test="phoneModel != null">
        phone_model,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="point != null">
        point,
      </if>
      <if test="coordtype != null">
        coordType,
      </if>
      <if test="changePhone != null">
        change_phone,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="studentNo != null">
        #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="classNo != null">
        #{classNo,jdbcType=VARCHAR},
      </if>
      <if test="phoneBrand != null">
        #{phoneBrand,jdbcType=VARCHAR},
      </if>
      <if test="phoneModel != null">
        #{phoneModel,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="point != null">
        #{point,jdbcType=VARCHAR},
      </if>
      <if test="coordtype != null">
        #{coordtype,jdbcType=VARCHAR},
      </if>
      <if test="changePhone != null">
        #{changePhone,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.graduation.education.user.service.dao.impl.mapper.entity.StudentSignExample" resultType="java.lang.Long">
    select count(*) from student_sign
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student_sign
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.studentNo != null">
        student_no = #{record.studentNo,jdbcType=VARCHAR},
      </if>
      <if test="record.studentName != null">
        student_name = #{record.studentName,jdbcType=VARCHAR},
      </if>
      <if test="record.classNo != null">
        class_no = #{record.classNo,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneBrand != null">
        phone_brand = #{record.phoneBrand,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneModel != null">
        phone_model = #{record.phoneModel,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.point != null">
        point = #{record.point,jdbcType=VARCHAR},
      </if>
      <if test="record.coordtype != null">
        coordType = #{record.coordtype,jdbcType=VARCHAR},
      </if>
      <if test="record.changePhone != null">
        change_phone = #{record.changePhone,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student_sign
    set id = #{record.id,jdbcType=BIGINT},
      student_no = #{record.studentNo,jdbcType=VARCHAR},
      student_name = #{record.studentName,jdbcType=VARCHAR},
      class_no = #{record.classNo,jdbcType=VARCHAR},
      phone_brand = #{record.phoneBrand,jdbcType=VARCHAR},
      phone_model = #{record.phoneModel,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      point = #{record.point,jdbcType=VARCHAR},
      coordType = #{record.coordtype,jdbcType=VARCHAR},
      change_phone = #{record.changePhone,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduation.education.user.service.dao.impl.mapper.entity.StudentSign">
    update student_sign
    <set>
      <if test="studentNo != null">
        student_no = #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="classNo != null">
        class_no = #{classNo,jdbcType=VARCHAR},
      </if>
      <if test="phoneBrand != null">
        phone_brand = #{phoneBrand,jdbcType=VARCHAR},
      </if>
      <if test="phoneModel != null">
        phone_model = #{phoneModel,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="point != null">
        point = #{point,jdbcType=VARCHAR},
      </if>
      <if test="coordtype != null">
        coordType = #{coordtype,jdbcType=VARCHAR},
      </if>
      <if test="changePhone != null">
        change_phone = #{changePhone,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduation.education.user.service.dao.impl.mapper.entity.StudentSign">
    update student_sign
    set student_no = #{studentNo,jdbcType=VARCHAR},
      student_name = #{studentName,jdbcType=VARCHAR},
      class_no = #{classNo,jdbcType=VARCHAR},
      phone_brand = #{phoneBrand,jdbcType=VARCHAR},
      phone_model = #{phoneModel,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      point = #{point,jdbcType=VARCHAR},
      coordType = #{coordtype,jdbcType=VARCHAR},
      change_phone = #{changePhone,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>